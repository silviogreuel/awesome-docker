input {
    beats {
				type => "log4net"
				port => 5044
				codec => multiline {
            pattern => "^%{TIMESTAMP_ISO8601} "
            negate => true
            what => previous
        }
    }
}

filter {
    if [type] == "log4net" {
        grok {
            match => ["message", "%{TIMESTAMP_ISO8601:timestamp} \[%{NUMBER:threadid}\] %{WORD:level}\s*%{DATA:class} %{DATA:NDC} - %{GREEDYDATA:message}"]
            overwrite => ["message","timestamp"]
        }

        date {
            match => ["timestamp","yyyy-MM-dd HH:mm:ss,SSS"]
            remove_field => ["timestamp"]
        }

        grok {
            match => [ "message", "(?<message>[^\r\n]*)\r?(\n(?<exception>.*))?"]
            overwrite => ["message"]
        }
    }

    kv {
        trim_value => "\r\(\)"
        trim_key => "\r\(\)"
        source => "message"
        value_split => ":" 
        allow_duplicate_values => false
    }

    mutate {
        convert => { 
            "processid" => "integer"
            "threadid" => "integer" 
            "elapsed" => "integer"
        }
    }
}

output {
    elasticsearch { 
        hosts => [ "elasticsearch:9200" ]
        template_overwrite => true
    }
}
